name: Test Execution and Ketryx Reporting

on:
  push:
    branches: [ main ] # Runs every time code is pushed to the main branch
  workflow_dispatch:  # <--- This is the complete line needed

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Step 1: Run the test script and output a report (e.g., in a temporary file)
      - name: Execute Test
        id: test_run
        # We run the test, but the job MUST NOT fail here, 
        # so the subsequent Ketryx reporting step can run.
        run: |
          python run_test_hello_world_v2.py
        continue-on-error: true # Important: Allows the workflow to continue to the reporting step

      # Step 2: New diagnostic step
      - name: Check Ketryx Inputs (SAFE)
        run: |
          # Use a conditional echo to confirm if the variable is present (not empty).
          # GitHub will censor the actual value, but if the output is not just 'IS EMPTY', 
          # you know it successfully loaded *a* value.
          if [ -z "${{ secrets.KETRYX_PROJECT }}" ]; then
            echo "Project ID Secret IS EMPTY. Check GitHub Secrets."
            exit 1 # Fail the job if the critical secret is truly missing
          else
            echo "Project ID Secret is PRESENT (value will be censored as ***)."
            # You can try printing the censored value just to see the ***:
            echo "Censored Project ID: ${{ secrets.KETRYX_PROJECT }}"
          fi


      # Step C: Report Results to Ketryx (FINAL CONFIGURATION)
      - name: Report Test Execution to Ketryx
        uses: ketryx/ketryx-github-action@v1 
        
        with:
          # 1. Project ID Input (Using your exact secret name)
          project: ${{ secrets.KETRYX_PROJECT }} 
          
          # 2. API Key Input (Using your exact secret name)
          api-key: ${{ secrets.KETRYX_API_KEY }} 
          
          # 3. Test Results Path (Ensure this file is generated by your Python script)
          test-junit-path: ./test_results.xml
          
          # 4. Traceability and Service Inputs
          commit-sha: ${{ github.sha }}
          ketryx-url: 'https://cs.ketryx.net'
          check-dependencies-status: false
          check-item-association: false
          check-release-status: false
          
      - name: Finalize Report
        # This step ensures the workflow fails if the test failed, regardless of the reporting status
        if: ${{ steps.test_run.outcome == 'failure' }}
        run: exit 1
